{
  "metadata": {
    "name": "HeatConduction1DWall",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "//> module\n// Import FEAScript library\nimport { FEAScriptModel } from \"https://core.feascript.com/dist/feascript.esm.js\";\n\n// Create a new FEAScript model\nconst model = new FEAScriptModel();\n\n// Set solver configuration\nmodel.setSolverConfig(\"heatConductionScript\");\n\n// Define mesh configuration\nmodel.setMeshConfig({\n  meshDimension: \"1D\",\n  elementOrder: \"linear\",\n  numElementsX: 10,\n  maxX: 0.15,\n});\n\n// Define boundary conditions\nmodel.addBoundaryCondition(\"0\", [\"convection\", 1, 25]);\nmodel.addBoundaryCondition(\"1\", [\"constantTemp\", 5]);\n\n// Set solver method\nmodel.setSolverMethod(\"jacobi\");\n\n// Solve the problem and get the solution\nconst { solutionVector, nodesCoordinates } = model.solve();\n\n// Print results to console\nconsole.log(\"Node coordinates:\", nodesCoordinates);\nconsole.log(\"Solution vector:\", solutionVector);\n\n// Plot results using Plotly\n// Define trace\nconst trace = {\n    x: nodesCoordinates,\n    y: solutionVector,\n    type: 'scatter',\n    mode: 'lines+markers',\n    marker: {color: 'blue'}\n};\n\n// Define layout\nconst layout = {\n    title: 'Temperature distribution along wall thickness',\n    xaxis: {title: 'X-axis'},\n    yaxis: {title: 'Temperature (Â°C)'}\n};\n\n// Render plot\nscrib.show(\"<div style='height:500px;width:500px' id='line-chart'></div>\")\nPlotly.newPlot(\"line-chart\", [trace], layout);\n",
      "status": "",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/nikoscham/FEAScript-Scribbler-examples",
  "run_on_load": false
}